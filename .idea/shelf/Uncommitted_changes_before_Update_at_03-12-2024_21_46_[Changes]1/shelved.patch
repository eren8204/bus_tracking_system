Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_gravity=\"center\"\r\n    android:background=\"@drawable/background\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/bell\"\r\n        android:layout_width=\"50sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_gravity=\"top\"\r\n        android:layout_marginLeft=\"20sp\"\r\n        android:layout_marginTop=\"15sp\"\r\n        android:clickable=\"true\"\r\n        app:srcCompat=\"@drawable/baseline_add_alert_24\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/srmslogo\"\r\n        android:layout_width=\"150sp\"\r\n        android:layout_height=\"150sp\"\r\n        android:layout_gravity=\"center\"\r\n        app:srcCompat=\"@drawable/logo\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:paddingLeft=\"20sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\">\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:text=\"GO MAP\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"32sp\"\r\n            android:textStyle=\"bold\" />\r\n        <ImageView\r\n            android:layout_width=\"50sp\"\r\n            android:layout_height=\"50sp\"\r\n            android:src=\"@drawable/baseline_add_location_24\" />\r\n    </LinearLayout>\r\n\r\n\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:text=\"Welcome\"\r\n        android:textColor=\"#B41116\"\r\n        android:layout_gravity=\"left\"\r\n        android:layout_marginLeft=\"35sp\"\r\n        android:gravity=\"center\"\r\n        android:textSize=\"32sp\"\r\n        android:textStyle=\"bold\"/>\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"left\"\r\n        android:layout_marginLeft=\"35sp\"\r\n        android:textStyle=\"bold\"\r\n        android:text=\"Please login with your information\"\r\n        android:alpha=\"0.7\"/>\r\n\r\n\r\n\r\n    <EditText\r\n        android:id=\"@+id/loginphone\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"40sp\"\r\n        android:layout_marginTop=\"30sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"left\"\r\n        android:paddingLeft=\"15sp\"\r\n        android:drawableLeft=\"@drawable/baseline_perm_identity_24\"\r\n        android:paddingTop=\"8sp\"\r\n        android:textSize=\"20sp\"\r\n        android:background=\"@drawable/edittextbackground\"\r\n        android:inputType=\"text\"\r\n        android:hint=\"Enter User Id\"\r\n        />\r\n\r\n    <View\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"20dp\"/>\r\n\r\n\r\n    <EditText\r\n        android:id=\"@+id/loginpass\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"40sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"left\"\r\n        android:paddingLeft=\"15sp\"\r\n        android:paddingTop=\"8sp\"\r\n        android:textSize=\"20sp\"\r\n        android:drawableLeft=\"@drawable/baseline_lock_24\"\r\n        android:background=\"@drawable/edittextbackground\"\r\n        android:inputType=\"text\"\r\n        android:hint=\"Enter your password\"\r\n        />\r\n\r\n    <View\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"10dp\"/>\r\n\r\n    <Button\r\n        android:id=\"@+id/loginbtn\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"@drawable/btnbackground\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/white\"\r\n        android:text=\"LOGIN\"\r\n        >\r\n    </Button>\r\n</LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -24,7 +24,7 @@
         android:layout_width="150sp"
         android:layout_height="150sp"
         android:layout_gravity="center"
-        app:srcCompat="@drawable/logo" />
+        app:srcCompat="@drawable/buslogo" />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/res/layout/activity_buslocate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.appcompat.widget.LinearLayoutCompat xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/grey\"\r\n    tools:context=\".buslocate\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/statusbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/grey\"\r\n        android:orientation=\"vertical\"\r\n        android:layout_gravity=\"center\"\r\n        android:padding=\"10sp\"\r\n        >\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"15dp\"\r\n            android:orientation=\"horizontal\"\r\n            android:gravity=\"center\">\r\n            <TextView\r\n                android:id=\"@+id/statustext\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Not Running\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"30sp\"/>\r\n        </LinearLayout>\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"10dp\">\r\n            <EditText\r\n                android:id=\"@+id/busno\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:inputType=\"number\"\r\n                android:background=\"@drawable/edittextbackground\"\r\n                android:layout_margin=\"10dp\"\r\n                android:padding=\"20dp\"\r\n                android:hint=\"Bus Number\"/>\r\n            <Button\r\n                android:id=\"@+id/search\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Search\"\r\n                android:background=\"@drawable/btndriver\"\r\n                />\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\"\r\n        >\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:cardCornerRadius=\"20sp\">\r\n            <fragment\r\n                android:id=\"@+id/map\"\r\n                android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                tools:layout_editor_absoluteX=\"7dp\">\r\n                    <LinearLayout\r\n                        android:id=\"@+id/bottom_status\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"bottom\"\r\n                        android:background=\"@color/grey\"\r\n                        android:gravity=\"bottom\">\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"10dp\"\r\n                            android:text=\"Bus is Running\"\r\n                            android:gravity=\"bottom\"/>\r\n                    </LinearLayout>\r\n            </fragment>\r\n        </androidx.cardview.widget.CardView>\r\n    </LinearLayout>\r\n</androidx.appcompat.widget.LinearLayoutCompat>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_buslocate.xml b/app/src/main/res/layout/activity_buslocate.xml
--- a/app/src/main/res/layout/activity_buslocate.xml	
+++ b/app/src/main/res/layout/activity_buslocate.xml	
@@ -52,6 +52,7 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Search"
+                android:clickable="false"
                 android:background="@drawable/btndriver"
                 />
         </LinearLayout>
Index: app/src/main/res/layout/activity_splash.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_gravity=\"center\"\r\n    android:orientation=\"vertical\"\r\n    android:background=\"@drawable/background\"\r\n    tools:context=\".splashActivity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/bell\"\r\n        android:layout_width=\"50sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_gravity=\"top\"\r\n        android:layout_marginLeft=\"20sp\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:clickable=\"true\"\r\n        app:srcCompat=\"@drawable/baseline_add_alert_24\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/srmslogo\"\r\n        android:layout_width=\"150sp\"\r\n        android:layout_height=\"150sp\"\r\n        android:layout_gravity=\"center\"\r\n        app:srcCompat=\"@drawable/logo\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_marginTop=\"40sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:gravity=\"center\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:text=\"GO MAP\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"32sp\"\r\n            android:textStyle=\"bold\" />\r\n        <ImageView\r\n            android:layout_width=\"50sp\"\r\n            android:layout_height=\"50sp\"\r\n            android:src=\"@drawable/baseline_add_location_24\" />\r\n    </LinearLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/routes\"\r\n        android:text=\"Routes\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_marginTop=\"30sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"@drawable/btnbackground\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/white\">\r\n\r\n    </Button>\r\n\r\n\r\n    <Button\r\n        android:id=\"@+id/Driver\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"@drawable/btnbackground\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/white\"\r\n        android:text=\"Driver\">\r\n\r\n    </Button>\r\n\r\n    <Button\r\n        android:id=\"@+id/user\"\r\n        android:layout_width=\"300sp\"\r\n        android:layout_height=\"50sp\"\r\n        android:layout_marginTop=\"20sp\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"@drawable/btnbackground\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@color/white\"\r\n        android:text=\"User\">\r\n\r\n    </Button>\r\n\r\n\r\n</LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_splash.xml b/app/src/main/res/layout/activity_splash.xml
--- a/app/src/main/res/layout/activity_splash.xml	
+++ b/app/src/main/res/layout/activity_splash.xml	
@@ -24,7 +24,7 @@
         android:layout_width="150sp"
         android:layout_height="150sp"
         android:layout_gravity="center"
-        app:srcCompat="@drawable/logo" />
+        app:srcCompat="@drawable/buslogo" />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/com/example/hackathon/buslocate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hackathon;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Location;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.LinearLayoutCompat;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\n\r\nimport org.bson.Document;\r\n\r\nimport io.realm.Realm;\r\nimport io.realm.mongodb.App;\r\nimport io.realm.mongodb.AppConfiguration;\r\nimport io.realm.mongodb.User;\r\nimport io.realm.mongodb.mongo.MongoClient;\r\nimport io.realm.mongodb.mongo.MongoCollection;\r\nimport io.realm.mongodb.mongo.MongoDatabase;\r\n\r\npublic class buslocate extends AppCompatActivity implements OnMapReadyCallback{\r\n    private GoogleMap myMap;\r\n    private final int FINE_PERMISSION_CODE = 1;\r\n    Location currentLocation;\r\n    FusedLocationProviderClient fusedLocationProviderClient;\r\n    String Appid = BuildConfig.appId;\r\n    App app;\r\n    MongoClient mongoClient;\r\n    MongoDatabase mongoDatabase;\r\n    MongoCollection<Document> mongoCollection;\r\n    User user;\r\n    double lati, longi;\r\n    String name;\r\n    Button search;\r\n    EditText busno;\r\n    TextView statustext;\r\n    LinearLayout statusbar,bottom_status;\r\n    LinearLayoutCompat main;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_buslocate);\r\n        Realm.init(this);\r\n        app = new App(new AppConfiguration.Builder(Appid).build());\r\n        user = app.currentUser();\r\n        assert user != null;\r\n        mongoClient = user.getMongoClient(\"mongodb-atlas\");\r\n        mongoDatabase = mongoClient.getDatabase(\"location\");\r\n        mongoCollection = mongoDatabase.getCollection(\"driverloc\");\r\n        busno = findViewById(R.id.busno);\r\n        search = findViewById(R.id.search);\r\n        statustext = findViewById(R.id.statustext);\r\n        statusbar = findViewById(R.id.statusbar);\r\n        main = findViewById(R.id.main);\r\n        bottom_status = findViewById(R.id.bottom_status);\r\n        user = app.currentUser();\r\n        if (user == null) {\r\n            Toast.makeText(this, \"User not authenticated\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n            return;\r\n        }\r\n        search.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String bsn = busno.getText().toString();\r\n                Document queryFilter = new Document().append(\"busno\", bsn);\r\n                mongoCollection.findOne(queryFilter).getAsync(result -> {\r\n                    if (result.isSuccess()) {\r\n                        Log.i(\"resultStatus\", String.valueOf(result.isSuccess()));\r\n                        Log.i(\"result\", result.toString());\r\n                        Document resultData = result.get();\r\n                        if (resultData != null) {\r\n                            String lat = resultData.getString(\"lat\");\r\n                            String lon = resultData.getString(\"lon\");\r\n                            lati = Double.parseDouble(lat);\r\n                            longi = Double.parseDouble(lon);\r\n                            name = bsn;\r\n                            if(myMap!=null)\r\n                            {\r\n                                myMap.clear();\r\n                            }\r\n                            Toast.makeText(buslocate.this, \"Bus Found\", Toast.LENGTH_SHORT).show();\r\n                            SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                                    .findFragmentById(R.id.map);\r\n                            assert mapFragment != null;\r\n                            mapFragment.getMapAsync(buslocate.this);\r\n                            statustext.setText(\"Running\");\r\n                            statusbar.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                            main.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                            bottom_status.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                        } else {\r\n                            Log.i(\"result1\", \"error1\");\r\n                            statustext.setText(\"Not Running\");\r\n                            statusbar.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                            main.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                            bottom_status.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                            Toast.makeText(buslocate.this, \"No Bus Found\", Toast.LENGTH_SHORT).show();\r\n                            lati=0;\r\n                            longi=0;\r\n                            if(myMap!=null)\r\n                            {\r\n                                myMap.clear();\r\n                            }\r\n                            handler.removeCallbacks(updateLocationRunnable);\r\n                        }\r\n                    } else {\r\n                        Log.i(\"result2\", \"error2: \"+result.getError().toString());\r\n                        Toast.makeText(buslocate.this, \"No Bus Found\", Toast.LENGTH_SHORT).show();\r\n                        lati=0;\r\n                        longi=0;\r\n                        if(myMap!=null)\r\n                        {\r\n                            myMap.clear();\r\n                        }\r\n                        handler.removeCallbacks(updateLocationRunnable);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    Handler handler = new Handler();\r\n    Runnable updateLocationRunnable = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            if(myMap!=null)\r\n            {\r\n                myMap.clear();\r\n            }\r\n            SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                    .findFragmentById(R.id.map);\r\n            assert mapFragment != null;\r\n            mapFragment.getMapAsync(buslocate.this);\r\n            handler.postDelayed(this, 10000);\r\n        }\r\n    };\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        myMap = googleMap;\r\n        if(myMap!=null)\r\n        {\r\n            myMap.clear();\r\n        }\r\n        LatLng clg = new LatLng(28.47755484223689, 79.43644973862979);\r\n        MarkerOptions option = new MarkerOptions().position(clg).title(\"SRMS CET\");\r\n        option.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));\r\n        myMap.addMarker(option);\r\n        myMap.moveCamera(CameraUpdateFactory.newLatLng(clg));\r\n        if(lati!=0.0 || longi!=0.0) {\r\n            LatLng bly = new LatLng(lati, longi);\r\n            MarkerOptions options = new MarkerOptions().position(bly).title(name);\r\n            options.icon(bitmapDescriptor(getApplicationContext(),R.drawable.bus_marker));\r\n            myMap.addMarker(options);\r\n            myMap.moveCamera(CameraUpdateFactory.newLatLng(bly));\r\n            myMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(lati,longi), 11.7f));\r\n        }\r\n        else{\r\n            Toast.makeText(this,\"No Bus Found\",Toast.LENGTH_SHORT).show();\r\n        }\r\n        myMap.getUiSettings().setCompassEnabled(true);\r\n        myMap.getUiSettings().setZoomControlsEnabled(true);\r\n        myMap.getUiSettings().setZoomGesturesEnabled(true);\r\n    }\r\n\r\n    private BitmapDescriptor bitmapDescriptor(Context context,int vectorResID)\r\n    {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context,vectorResID);\r\n        assert vectorDrawable != null;\r\n        vectorDrawable.setBounds(0,0,vectorDrawable.getIntrinsicWidth(),vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getMinimumWidth(),vectorDrawable.getMinimumHeight(),Bitmap.Config.ARGB_8888);\r\n\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        handler.removeCallbacks(updateLocationRunnable);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hackathon/buslocate.java b/app/src/main/java/com/example/hackathon/buslocate.java
--- a/app/src/main/java/com/example/hackathon/buslocate.java	
+++ b/app/src/main/java/com/example/hackathon/buslocate.java	
@@ -85,6 +85,7 @@
         statusbar = findViewById(R.id.statusbar);
         main = findViewById(R.id.main);
         bottom_status = findViewById(R.id.bottom_status);
+        search.setEnabled(false);
         user = app.currentUser();
         if (user == null) {
             Toast.makeText(this, "User not authenticated", Toast.LENGTH_SHORT).show();
Index: app/src/main/java/com/example/hackathon/splashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hackathon;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport org.bson.Document;\r\nimport org.bson.conversions.Bson;\r\nimport org.bson.types.ObjectId;\r\n\r\n\r\nimport java.sql.Date;\r\n\r\nimport io.realm.Realm;\r\nimport io.realm.mongodb.App;\r\nimport io.realm.mongodb.AppConfiguration;\r\nimport io.realm.mongodb.Credentials;\r\nimport io.realm.mongodb.RealmResultTask;\r\nimport io.realm.mongodb.User;\r\nimport io.realm.mongodb.mongo.MongoClient;\r\nimport io.realm.mongodb.mongo.MongoCollection;\r\nimport io.realm.mongodb.mongo.MongoDatabase;\r\nimport io.realm.mongodb.mongo.iterable.MongoCursor;\r\n\r\n@SuppressLint(\"CustomSplashScreen\")\r\npublic class splashActivity extends AppCompatActivity {\r\n\r\n    View user;\r\n    Button driver;\r\n    Button route;\r\n    String Appid = BuildConfig.appId;\r\n    App app;\r\n    MongoClient mongoClient;\r\n    MongoDatabase mongoDatabase;\r\n    MongoCollection<Document> mongoCollection,mongoCollection2;\r\n    ImageView bell;\r\n\r\n    @SuppressLint({\"MissingInflatedId\", \"WrongViewCast\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_splash);\r\n        Realm.init(this);\r\n        app = new App(new AppConfiguration.Builder(Appid).build());\r\n        user=findViewById(R.id.user);\r\n        driver=findViewById(R.id.Driver);\r\n        route=findViewById(R.id.routes);\r\n        bell=findViewById(R.id.bell);\r\n\r\n        checkNetworkConnectivity();\r\n\r\n        route.setOnClickListener(new View.OnClickListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onClick(View v) {\r\n                Dialog dialog = new Dialog(splashActivity.this);\r\n                dialog.setContentView(R.layout.dialog);\r\n                dialog.show();\r\n\r\n                TextView custom_route = dialog.findViewById(R.id.custom_route);\r\n                TextView routes_data = dialog.findViewById(R.id.routes_data);\r\n                custom_route.setText(\"Fetching data...\");\r\n                Log.d(\"MongoDB\", \"Dialog and TextView initialized\");\r\n\r\n                User userID = app.currentUser();\r\n\r\n                if (userID != null) {\r\n                    MongoClient mongoClient = userID.getMongoClient(\"mongodb-atlas\");\r\n                    MongoDatabase mongoDatabase = mongoClient.getDatabase(\"location\");\r\n                    MongoCollection<Document> routeCollection = mongoDatabase.getCollection(\"routes\");\r\n                    String routeId = \"1234\";\r\n                    Document filter = new Document(\"route_id\", routeId);\r\n\r\n                    Log.d(\"MongoDB\", \"Filter created: \" + filter.toJson());\r\n\r\n                    routeCollection.findOne(filter).getAsync(task -> {\r\n                        if (task.isSuccess()) {\r\n                            Document doc = task.get();\r\n                            if (doc != null) {\r\n                                String routeName = doc.getString(\"route\");\r\n                                runOnUiThread(() -> {\r\n                                    custom_route.setText(\"Routes\");\r\n                                    routes_data.setText(\"Route Name: \" + routeName);\r\n                                    Log.d(\"MongoDB\", \"Data fetched successfully: \" + routeName);\r\n                                });\r\n                            } else {\r\n                                runOnUiThread(() -> {\r\n                                    routes_data.setText(\"No data found for Route ID: \" + routeId);\r\n                                    Log.d(\"MongoDB\", \"No document found for Route ID: \" + routeId);\r\n                                });\r\n                            }\r\n                        } else {\r\n                            runOnUiThread(() -> {\r\n                                String errorMessage = \"Failed to fetch data: \" + task.getError().toString();\r\n                                routes_data.setText(errorMessage);\r\n                                Log.e(\"MongoDB\", errorMessage);\r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    runOnUiThread(() -> {\r\n                        custom_route.setText(\"User not logged in\");\r\n                        Log.e(\"MongoDB\", \"User not logged in\");\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        user.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Credentials credentials = Credentials.anonymous();\r\n                app.loginAsync(credentials, new App.Callback<User>() {\r\n                    @Override\r\n                    public void onResult(App.Result<User> result) {\r\n                        if(result.isSuccess()){\r\n                            Intent intent=new Intent(splashActivity.this, buslocate.class);\r\n                            startActivity(intent);\r\n                        }\r\n                        else\r\n                        {\r\n                            Toast.makeText(splashActivity.this, \"Check your internet connection\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        driver.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(splashActivity.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        bell.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(splashActivity.this, notices.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n    private void checkNetworkConnectivity() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();\r\n        boolean isConnected = activeNetwork != null && activeNetwork.isConnectedOrConnecting();\r\n        boolean isWiFi = activeNetwork != null && activeNetwork.getType() == ConnectivityManager.TYPE_WIFI;\r\n\r\n        if (!isConnected) {\r\n            new AlertDialog.Builder(this)\r\n                    .setTitle(\"No Internet Connection\")\r\n                    .setMessage(\"You are not connected to the internet. Please check your network settings.\")\r\n                    .setPositiveButton(\"Settings\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            Intent intent = new Intent(Settings.ACTION_WIRELESS_SETTINGS);\r\n                            startActivity(intent);\r\n                        }\r\n                    })\r\n                    .setNegativeButton(\"Cancel\", null)\r\n                    .show();\r\n        } else {\r\n            //\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hackathon/splashActivity.java b/app/src/main/java/com/example/hackathon/splashActivity.java
--- a/app/src/main/java/com/example/hackathon/splashActivity.java	
+++ b/app/src/main/java/com/example/hackathon/splashActivity.java	
@@ -77,7 +77,7 @@
             public void onClick(View v) {
                 Dialog dialog = new Dialog(splashActivity.this);
                 dialog.setContentView(R.layout.dialog);
-                dialog.show();
+                //dialog.show();
 
                 TextView custom_route = dialog.findViewById(R.id.custom_route);
                 TextView routes_data = dialog.findViewById(R.id.routes_data);
@@ -159,8 +159,8 @@
         bell.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Intent intent = new Intent(splashActivity.this, notices.class);
-                startActivity(intent);
+//                Intent intent = new Intent(splashActivity.this, notices.class);
+//                startActivity(intent);
             }
         });
     }
Index: app/src/main/java/com/example/hackathon/driverloc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hackathon;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.LinearLayoutCompat;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationCallback;\r\nimport com.google.android.gms.location.LocationRequest;\r\nimport com.google.android.gms.location.LocationResult;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport org.bson.Document;\r\nimport org.bson.types.ObjectId;\r\n\r\nimport io.realm.mongodb.App;\r\nimport io.realm.mongodb.AppConfiguration;\r\nimport io.realm.mongodb.User;\r\nimport io.realm.mongodb.mongo.MongoClient;\r\nimport io.realm.mongodb.mongo.MongoCollection;\r\nimport io.realm.mongodb.mongo.MongoDatabase;\r\n\r\npublic class driverloc extends AppCompatActivity implements OnMapReadyCallback{\r\n\r\n    private GoogleMap myMap;\r\n    private final int FINE_PERMISSION_CODE = 1;\r\n    Location currentLocation;\r\n    FusedLocationProviderClient fusedLocationProviderClient;\r\n    String Appid = BuildConfig.appId;\r\n    App app;\r\n    MongoClient mongoClient;\r\n    MongoDatabase mongoDatabase;\r\n    MongoCollection<Document> mongoCollection,mongoCollection2;\r\n    User user;\r\n    Button startbtn, stopbtn;\r\n    EditText busnostart;\r\n    TextView statustext,curr_bus,bustext;\r\n    String name;\r\n    GoogleMap googleMap;\r\n    LinearLayout statusbar,bottom_status;\r\n    LinearLayoutCompat main;\r\n//    ImageView alert;\r\n    private static final long UPDATE_INTERVAL = 7000;\r\n    private static final float SMALLEST_DISPLACEMENT = 10f;\r\n\r\n    @SuppressLint({\"MissingInflatedId\",\"SetTextI18n\", \"ResourceAsColor\"})\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_driverloc);\r\n        startbtn = findViewById(R.id.startbtn);\r\n        stopbtn = findViewById(R.id.stopbtn);\r\n        busnostart = findViewById(R.id.busnostart);\r\n        statustext = findViewById(R.id.statustext);\r\n        statusbar = findViewById(R.id.statusbar);\r\n        main = findViewById(R.id.main);\r\n        bottom_status = findViewById(R.id.bottom_status);\r\n        curr_bus = findViewById(R.id.curr_bus);\r\n        bustext = findViewById(R.id.bustext);\r\n\r\n        Intent intent = getIntent();\r\n        String driver_id = intent.getStringExtra(\"driver_id\");\r\n\r\n        checkLocationServices();\r\n        fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);\r\n        getLastLocation();\r\n        LocationRequest locationRequest = LocationRequest.create()\r\n                .setInterval(UPDATE_INTERVAL)\r\n                .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)\r\n                .setSmallestDisplacement(SMALLEST_DISPLACEMENT);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            return;\r\n        }\r\n        fusedLocationProviderClient.requestLocationUpdates(locationRequest, new LocationCallback() {\r\n            @Override\r\n            public void onLocationResult(@NonNull LocationResult locationResult) {\r\n                Location location = locationResult.getLastLocation();\r\n                if (location != null) {\r\n                    currentLocation = location;\r\n                }\r\n            }\r\n        }, Looper.getMainLooper());\r\n\r\n        app = new App(new AppConfiguration.Builder(Appid).build());\r\n        user = app.currentUser();\r\n        assert user != null;\r\n        mongoClient = user.getMongoClient(\"mongodb-atlas\");\r\n        mongoDatabase = mongoClient.getDatabase(\"location\");\r\n        mongoCollection = mongoDatabase.getCollection(\"driverloc\");\r\n        mongoCollection2 = mongoDatabase.getCollection(\"parked\");\r\n\r\n        Document filter = new Document(\"userid\",user.getId());\r\n        mongoCollection.findOne(filter).getAsync(result -> {\r\n            if(result.isSuccess())\r\n            {\r\n                if(result.get()!=null)\r\n                {\r\n                    String running_bus = result.get().getString(\"busno\");\r\n                    Toast.makeText(driverloc.this, \"Bus Running\", Toast.LENGTH_SHORT).show();\r\n                    SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                            .findFragmentById(R.id.map);\r\n                    assert mapFragment != null;\r\n                    if(mapFragment!=null)\r\n                    {\r\n                        mapFragment.getMapAsync(driverloc.this);\r\n                    }\r\n                    handler.post(updateLocationRunnable);\r\n                    startbtn.setVisibility(View.GONE);\r\n                    stopbtn.setVisibility(View.VISIBLE);\r\n                    statustext.setText(\"Running\");\r\n                    statusbar.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                    main.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                    bottom_status.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                    curr_bus.setText(running_bus);\r\n                    bustext.setVisibility(View.VISIBLE);\r\n                    curr_bus.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n\r\n        startbtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String bsn = busnostart.getText().toString();\r\n                if(bsn.isEmpty())\r\n                {\r\n                    Toast.makeText(driverloc.this,\"Enter Bus No.\",Toast.LENGTH_SHORT).show();\r\n                }\r\n                else{\r\n                    if(currentLocation==null){\r\n                        Toast.makeText(driverloc.this,\"Please Wait\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    else {\r\n                        Document filter = new Document(\"userid\", user.getId()).append(\"busno\", busnostart.getText().toString());\r\n                        mongoCollection.deleteOne(filter).getAsync(result -> {\r\n                        });\r\n                        Document bus_check = new Document(\"busno\",bsn);\r\n                        mongoCollection.findOne(bus_check).getAsync(result -> {\r\n                                    if (result.isSuccess()) {\r\n                                        if(result.get()!=null)\r\n                                        {\r\n                                            Toast.makeText(driverloc.this, \"Bus Already Running\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            String lat = String.valueOf(currentLocation.getLatitude());\r\n                                            String lon = String.valueOf(currentLocation.getLongitude());\r\n                                            Document document = new Document()\r\n                                                    .append(\"_id\", new ObjectId())\r\n                                                    .append(\"userid\", user.getId())\r\n                                                    .append(\"driver_id\",driver_id)\r\n                                                    .append(\"busno\", bsn)\r\n                                                    .append(\"lat\", lat)\r\n                                                    .append(\"lon\", lon);\r\n                                            mongoCollection.insertOne(document).getAsync(res -> {\r\n                                                if(res.isSuccess())\r\n                                                {\r\n                                                    name=bsn;\r\n                                                    Toast.makeText(driverloc.this, \"Bus Running\", Toast.LENGTH_SHORT).show();\r\n                                                    SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                                                            .findFragmentById(R.id.map);\r\n                                                    assert mapFragment != null;\r\n                                                    mapFragment.getMapAsync(driverloc.this);\r\n                                                    handler.post(updateLocationRunnable);\r\n                                                    startbtn.setVisibility(View.GONE);\r\n                                                    stopbtn.setVisibility(View.VISIBLE);\r\n                                                    statustext.setText(\"Running\");\r\n                                                    statusbar.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                                                    main.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                                                    bottom_status.setBackgroundColor(Color.parseColor(\"#3EC543\"));\r\n                                                    curr_bus.setText(bsn);\r\n                                                    bustext.setVisibility(View.VISIBLE);\r\n                                                    curr_bus.setVisibility(View.VISIBLE);\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                    Toast.makeText(driverloc.this, \"Failed! \", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        Log.d(\"bus_check\",\"failed: \"+result.getError().toString());\r\n                                    }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        stopbtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String bsn = curr_bus.getText().toString();\r\n                if (bsn.isEmpty()) {\r\n                    Toast.makeText(driverloc.this, \"Enter Bus No.\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    Document filter1 = new Document(\"busno\", busnostart.getText().toString());\r\n                    mongoCollection2.deleteOne(filter1).getAsync(result -> {\r\n                    });\r\n                    handler.removeCallbacks(updateLocationRunnable);\r\n                    String lat = String.valueOf(currentLocation.getLatitude());\r\n                    String lon = String.valueOf(currentLocation.getLongitude());\r\n                    Document document = new Document()\r\n                            .append(\"_id\", new ObjectId())\r\n                            .append(\"userid\", user.getId())\r\n                            .append(\"busno\", busnostart.getText().toString())\r\n                            .append(\"lat\", lat)\r\n                            .append(\"lon\", lon);\r\n                    mongoCollection2.insertOne(document).getAsync(result -> {\r\n                        if (result.isSuccess()) {\r\n                            Toast.makeText(driverloc.this, \"Bus Parked!\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            Log.d(\"bus_stop\",result.getError().toString());\r\n                            Toast.makeText(driverloc.this, \"Error Parking\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                    Document filter = new Document(\"userid\", user.getId()).append(\"busno\", bsn);\r\n                    mongoCollection.deleteOne(filter).getAsync(result -> {\r\n                        if (result.isSuccess()) {\r\n                            long deletedCount = result.get().getDeletedCount();\r\n                            if (deletedCount > 0) {\r\n                                startbtn.setVisibility(View.VISIBLE);\r\n                                stopbtn.setVisibility(View.GONE);\r\n                                statustext.setText(\"Stopped\");\r\n                                statusbar.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                                main.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                                bottom_status.setBackgroundColor(Color.parseColor(\"#696B6C\"));\r\n                                Toast.makeText(driverloc.this, \"Journey Stopped\", Toast.LENGTH_SHORT).show();\r\n                                statustext.setText(\"Stopped\");\r\n                                bustext.setVisibility(View.INVISIBLE);\r\n                                curr_bus.setVisibility(View.INVISIBLE);\r\n                                busnostart.setText(\"\");\r\n                                handler.removeCallbacks(updateLocationRunnable);\r\n                                if (myMap != null) {\r\n                                    Log.d(\"MapClear\", \"Clearing the map\");\r\n                                    myMap.clear();\r\n                                } else {\r\n                                    Log.d(\"MapClear\", \"Map is null, cannot clear\");\r\n                                }\r\n                            } else {\r\n                                Log.d(\"Stop\", \"error deleting \"+result.getError().toString());\r\n                                Toast.makeText(driverloc.this, \"Start the journey first\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        } else {\r\n                            Log.d(\"bus_stop\",result.getError().toString());\r\n                            Toast.makeText(driverloc.this, \"Failed to stop journey\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    Handler handler = new Handler();\r\n    Runnable updateLocationRunnable = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            if (currentLocation != null) {\r\n                String lat = String.valueOf(currentLocation.getLatitude());\r\n                String lon = String.valueOf(currentLocation.getLongitude());\r\n                Document filter = new Document(\"userid\", user.getId()).append(\"busno\", busnostart.getText().toString());\r\n                Document update = new Document(\"$set\", new Document(\"lat\", lat).append(\"lon\", lon));\r\n                mongoCollection.updateOne(filter, update).getAsync(result -> {\r\n                    if (result.isSuccess()) {\r\n                        long modifiedCount = result.get().getModifiedCount();\r\n                        if (modifiedCount > 0) {\r\n                            //Toast.makeText(driverloc.this, \"Location Updated\", Toast.LENGTH_SHORT).show();\r\n\r\n                        } else {\r\n                            //Toast.makeText(driverloc.this, \"Unable To Update\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } else {\r\n                        Toast.makeText(driverloc.this, \"Failed to update location\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n            handler.postDelayed(this, 10000);\r\n        }\r\n    };\r\n\r\n    private void getLastLocation() {\r\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.ACCESS_FINE_LOCATION},FINE_PERMISSION_CODE);\r\n            return;\r\n        }\r\n        Task<Location> task = fusedLocationProviderClient.getLastLocation();\r\n        task.addOnSuccessListener(new OnSuccessListener<Location>() {\r\n            @Override\r\n            public void onSuccess(Location location) {\r\n                if(location!=null){\r\n                    currentLocation = location;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if(requestCode==FINE_PERMISSION_CODE){\r\n            if(grantResults.length>0 && grantResults[0]==PackageManager.PERMISSION_GRANTED){\r\n                getLastLocation();\r\n            }\r\n            else{\r\n                Toast.makeText(this,\"Allow Location\",Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        myMap = googleMap;\r\n        if (myMap != null) {\r\n            myMap.clear();\r\n\r\n            LatLng clg = new LatLng(28.47755484223689, 79.43644973862979);\r\n            MarkerOptions option = new MarkerOptions()\r\n                    .position(clg)\r\n                    .title(\"SRMS CET\")\r\n                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));\r\n            myMap.addMarker(option);\r\n            myMap.moveCamera(CameraUpdateFactory.newLatLng(clg));\r\n\r\n            if (currentLocation != null) {\r\n                LatLng bly = new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude());\r\n                MarkerOptions options = new MarkerOptions()\r\n                        .position(bly)\r\n                        .title(name)\r\n                        .icon(bitmapDescriptor(getApplicationContext(), R.drawable.bus_marker));\r\n                myMap.addMarker(options);\r\n                myMap.moveCamera(CameraUpdateFactory.newLatLng(bly));\r\n                myMap.animateCamera(CameraUpdateFactory.newLatLngZoom(bly, 11.7f));\r\n            } else {\r\n                Toast.makeText(this, \"No Bus Found\", Toast.LENGTH_SHORT).show();\r\n                Intent intent1 = new Intent(this, MainActivity.class);\r\n                startActivity(intent1);\r\n            }\r\n\r\n            myMap.getUiSettings().setCompassEnabled(true);\r\n            myMap.getUiSettings().setZoomControlsEnabled(true);\r\n            myMap.getUiSettings().setZoomGesturesEnabled(true);\r\n        } else {\r\n            Log.e(\"MapError\", \"GoogleMap is null\");\r\n        }\r\n    }\r\n\r\n    private BitmapDescriptor bitmapDescriptor(Context context, int vectorResID)\r\n    {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context,vectorResID);\r\n        assert vectorDrawable != null;\r\n        vectorDrawable.setBounds(0,0,vectorDrawable.getIntrinsicWidth(),vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getMinimumWidth(),vectorDrawable.getMinimumHeight(),Bitmap.Config.ARGB_8888);\r\n\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        handler.removeCallbacks(updateLocationRunnable);\r\n    }\r\n    @SuppressLint(\"MissingPermission\")\r\n    private void checkLocationServices() {\r\n        LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\r\n        boolean isLocationEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)\r\n                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);\r\n\r\n        if (!isLocationEnabled) {\r\n            new AlertDialog.Builder(this)\r\n                    .setTitle(\"Enable Location Services\")\r\n                    .setMessage(\"Your location services are turned off. Please enable them to use this feature.\")\r\n                    .setPositiveButton(\"Settings\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\r\n                            startActivity(intent);\r\n                        }\r\n                    })\r\n                    .setNegativeButton(\"Cancel\", null)\r\n                    .show();\r\n        } else {\r\n            //\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hackathon/driverloc.java b/app/src/main/java/com/example/hackathon/driverloc.java
--- a/app/src/main/java/com/example/hackathon/driverloc.java	
+++ b/app/src/main/java/com/example/hackathon/driverloc.java	
@@ -356,13 +356,13 @@
         if (myMap != null) {
             myMap.clear();
 
-            LatLng clg = new LatLng(28.47755484223689, 79.43644973862979);
-            MarkerOptions option = new MarkerOptions()
-                    .position(clg)
-                    .title("SRMS CET")
-                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));
-            myMap.addMarker(option);
-            myMap.moveCamera(CameraUpdateFactory.newLatLng(clg));
+//            LatLng clg = new LatLng(28.47755484223689, 79.43644973862979);
+//            MarkerOptions option = new MarkerOptions()
+//                    .position(clg)
+//                    .title("SRMS CET")
+//                    .icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_CYAN));
+//            myMap.addMarker(option);
+//            myMap.moveCamera(CameraUpdateFactory.newLatLng(clg));
 
             if (currentLocation != null) {
                 LatLng bly = new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude());
